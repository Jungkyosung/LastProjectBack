<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.mapper.TravelcourseMapper">

	
	<!-- 1-1. 여행코스 입력 -->
	<insert id="insertCourse" parameterType="project.dto.TravelcourseDto">
		<![CDATA[
		insert into travelcourse (travelcourse_title, travelcourse_createdtime, user_id, 
		travelcourse_start_date, travelcourse_end_date)
		values (
		#{travelcourseTitle}, now(), #{userId}, #{travelcourseStartDate}, #{travelcourseEndDate} )
		]]>
		<selectKey keyProperty="travelcourseIdx" resultType="Integer">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>

	<!-- 1-1-1. 여행코스 DAY별 입력 -->
	<insert id="insertCourseDay" parameterType="project.dto.TravelcourseDetailListDto">
		insert into travelcourse_list
		(day, day_description, travelcourse_idx) values
		(#{day}, #{dayDescription}, #{travelcourseIdx})
		<selectKey keyProperty="travelcourseListIdx" resultType="Integer">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	</insert>
	
	<!-- 1-1-2. 여행코스 DAY별 Dayinfo별 입력 -->
	<insert id="insertCourseDayinfo" parameterType="java.util.List">
		insert into travelcourse_detail
		(orders, lat, lng, place_name, travelcourse_list_idx) values
		<foreach item="dayinfo" index="index" collection="list" separator=",">
			(#{dayinfo.orders}, #{dayinfo.lat}, #{dayinfo.lng}, #{dayinfo.placeName}, #{dayinfo.travelcourseListIdx})
		</foreach>
	</insert>
	
	<!-- 1-1-3. 여행코스 이미지 입력 -->
	<insert id="insertCourseImg" parameterType="project.dto.TravelcourseImgDto">
		insert into travelcourse_img
		(travelcourse_idx, travelcourse_img)
		values (#{travelcourseIdx}, #{travelcourseImg})
	
	</insert>
	
	<!-- 1-2. 여행코스 list 조회 -->
	<select id="selectCourseList" resultType="project.dto.TravelcourseListDto">
		select * from user user
		inner join travelcourse tc
		on user.user_id = tc.user_id
		inner join travelcourse_list tcl
		on tc.travelcourse_idx = tcl.travelcourse_idx
		inner join travelcourse_detail tcd
		on tcl.travelcourse_list_idx = tcd.travelcourse_list_idx
		where travelcourse_deleted = 'N'
		order by tc.travelcourse_idx desc, tcd.travelcourse_list_idx asc,
        tcd.orders asc
	</select>
	
	<!-- 1-2(1). 여행코스 list 조회(페이지, 검색) -->
	<select id="selectTravelcourse" resultType="project.dto.TravelcourseDto">
		select 
		u.user_id, u.user_nickname, u.user_img, tc.travelcourse_idx,
		tc.travelcourse_title, tc.travelcourse_start_date, tc.travelcourse_end_date
		from user u
		inner join travelcourse tc
		on u.user_id = tc.user_id
		where tc.travelcourse_deleted = 'N'
		and tc.travelcourse_title like concat('%',#{search},'%')
		order by tc.travelcourse_idx desc
		limit #{pages}, 15;
	</select>
	
	<!-- 1-2(2). DAY정보 -->
	<select id="selectTravelcourseList" resultType="project.dto.TravelcourseDetailListDto">
		select tc.travelcourse_idx, tcl.travelcourse_list_idx, tcl.day, tcl.day_description 
		from (select * from travelcourse where travelcourse_deleted = 'N'
		and travelcourse_title like concat('%',#{search} ,'%') order by travelcourse_idx desc limit #{pages}, 15) tc
		inner join travelcourse_list tcl
		on tc.travelcourse_idx = tcl.travelcourse_idx
		where tc.travelcourse_deleted = 'N'
		order by tc.travelcourse_idx desc, tcl.travelcourse_list_idx asc;
	</select>
	
	<!-- 1-2(3). 코스정보 -->
	<select id="selectTravelcourseDetail" resultType="project.dto.TravelcourseDetailDto">
		select tcd.travelcourse_detail_idx, tcd.orders, tcd.lat, tcd.lng, tcd.place_name, tcd.travelcourse_list_idx
		from (select * from travelcourse where travelcourse_deleted = 'N'
		and travelcourse_title like concat('%',#{search} ,'%') order by travelcourse_idx desc limit #{pages}, 15) tc
		inner join travelcourse_list tcl
		on tc.travelcourse_idx = tcl.travelcourse_idx
		inner join travelcourse_detail tcd
		on tcl.travelcourse_list_idx = tcd.travelcourse_list_idx
		where travelcourse_deleted = 'N'
		order by tc.travelcourse_idx desc, tcd.travelcourse_list_idx asc,
		tcd.orders asc; 
	</select>
	
	<!-- 1-2(4). 이미지 조회 -->
	<select id="selectTravelcourseImg" resultType="project.dto.TravelcourseImgDto">
		select 	tc.travelcourse_idx, max(tci.travelcourse_img)
		from travelcourse tc
        left join travelcourse_img tci
        on tc.travelcourse_idx = tci.travelcourse_idx
		where tc.travelcourse_deleted = 'N'
		and tc.travelcourse_title like concat('%',#{search},'%')
		group by tc.travelcourse_idx
        order by tc.travelcourse_idx desc
		limit #{pages}, 15;
		</select>
	
	<!-- 검색어 기준 총 페이지 수 조회 -->
	<select id="selectTravelcourseTotalPages" resultType="int">
		select ceil(count(*)/15)
		from travelcourse 
		where travelcourse_deleted = 'N'
		and travelcourse_title like concat('%',#{search},'%');
	</select>

	<!-- 1-3-1. 여행코스 개별 detail 조회 -->
	<select id="selectCourseDetail" parameterType="int" resultType="project.dto.TravelcourseListDto">
		select * from travelcourse tc
		inner join travelcourse_list tcl
		on tc.travelcourse_idx = tcl.travelcourse_idx
		inner join travelcourse_detail tcd
		on tcl.travelcourse_list_idx = tcd.travelcourse_list_idx
		where travelcourse_deleted = 'N' and tc.travelcourse_idx = #{travelcourseIdx};
	</select>
	
	<!-- 1-3-2. 여행코스 개별 detail img 조회 -->
	<select id="selectCourseDetailImg" parameterType="int" resultType="project.dto.TravelcourseImgDto">
		select 	tc.travelcourse_idx, tci.travelcourse_img, tci.travelcourse_img_idx
		from travelcourse tc
        left join travelcourse_img tci
        on tc.travelcourse_idx = tci.travelcourse_idx
		where tc.travelcourse_deleted = 'N'
        and tc.travelcourse_idx = #{travelcourseIdx}
        order by tci.travelcourse_img_idx;
	</select>

	
	<update id="updateHitCount" parameterType="int">
		update travelcourse
		set travelcourse_cnt = travelcourse_cnt + 1
		where travelcourse_idx = #{travelcourseIdx}
	</update>

	<update id="updateCourse" parameterType="project.dto.TravelcourseDto">
		update travelcourse
		set travelcourse_title = #{travelcourseTitle},
		travelcourse_contents = #{travelcourseContents},
		travelcourse_createdtime = now(),
		user_id = 'admin'
		where travelcourse_idx = #{travelcourseIdx}
	</update>
	
	<!-- 여행코스 목록에서 삭제 -->
	<delete id="deleteCourse" parameterType="int">
		update travelcourse
		set travelcourse_deleted = "Y"
		where travelcourse_idx = #{travelcourseIdx}
	</delete>
	
	<!-- 2-1. 여행코스 댓글 조회 -->
	<select id="selectTravelcourseComment" parameterType="int" resultType="project.dto.TravelcourseCommentDto">
		select tcc.travelcourse_comment_idx, tcc.travelcourse_comment, tcc.travelcourse_comment_time,
		tcc.user_id, u.user_nickname, u.user_img, tcc.travelcourse_idx
		from travelcourse_comment tcc
		inner join user u
		on tcc.user_id = u.user_id
		where tcc.travelcourse_idx = #{travelcourseIdx}
	</select>
	
	<!-- 2-2. 여행코스 댓글 입력 -->
	<insert id="insertTravelcourseComment" parameterType="project.dto.TravelcourseCommentDto">
		insert into travelcourse_comment
		(travelcourse_comment, travelcourse_idx, user_id, travelcourse_comment_time)
		values (#{travelcourseComment}, #{travelcourseIdx}, #{userId}, now())
	</insert>
	
	<!-- 2-3. 여행코스 댓글 수정 -->
	<update id="updateTravelcourseComment" parameterType="project.dto.TravelcourseCommentDto">
		update travelcourse_comment
		set travelcourse_comment = #{travelcourseComment}
		where travelcourse_comment_idx = #{travelcourseCommentIdx}
	</update>
	
	<!-- 2-4.여행코스 댓글 삭제 -->
	<delete id="deleteTravelcourseComment" parameterType="int">
		delete from travelcourse_comment
		where travelcourse_comment_idx = #{travelcourseCommentIdx}
	</delete>
	
</mapper>